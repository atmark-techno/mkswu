# Initial update is done with the onetime public key and no encryption, override used keys
PRIVKEY=swupdate-onetime-public.key
PUBKEY=swupdate-onetime-public.pem
ORIG_ENCRYPT_KEYFILE="$ENCRYPT_KEYFILE"
ENCRYPT_KEYFILE=""

# Set our own swupdate certificate.
# change the '>>' to '>' if you do not want to keep the Armadillo
# Base OS update certificate. You will no longer be able to update
# directly from atmark-techno.com servers.
swdesc_exec --version extra_os.initial_setup 1 \
	swupdate.pem 'cat $1 >> /etc/swupdate.pem'

# If encryption is setup, also send encryption key
if [ -n "$ORIG_ENCRYPT_KEYFILE" ]; then
	ln -s "$(readlink -e $ORIG_ENCRYPT_KEYFILE)" "$OUTDIR/swupdate.aes-key"
	swdesc_files aeskey --version extra_os.initial_setup 1 \
		--dest /etc "$OUTDIR/swupdate.aes-key"
	swdesc_command --version extra_os.initial_setup 1 \
		"sed -i -e 's/# aes-key-file/aes-key-file/' /etc/swupdate.cfg"
fi

# Set your own passwords for root and atmark users.
# /!\ The install will fail if this is either are left unset
# You can generate your own hash with the following command:
#   python3 -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.METHOD_SHA512))'
# and update the part within the inner quotes e.g.
#       "usermod -p '"'$6$hfq6eDj4DpwIbn./$ER9tNgX0BYM1WDpYkV2CsI5tK3BWLIjjhbzJ5qlz8QooDJvwfM39KPDr4GKbKQzQB8TzMwlFwBRIekdENJ1/3.'"' root"
# You can also lock the account, e.g.
#       "usermod -L atmark"
error "Set users passwords and remove this error line"
swdesc_command --version extra_os.initial_setup 1 \
	"usermod -p '"'$6$salt$hash'"' atmark" \
	"usermod -p '"'$6$salt$hash'"' root"


# uncomment if you would like to poweroff the system after the update is complete
#POST_POWEROFF=1

#!/bin/sh

error() {
	echo "$@" >&2
	exit 1
}

usage() {
	echo "Usage: $0 -b base [-b base...] archive [archive..]"
	echo "base = image name recognizable by podman image inspect, to be removed from archive"
	echo "archive = image name recognizable by podman save"
}

inspect_image() {
	local image="$1"
	local hash checksum

	podman image inspect "$image" |
		jq -r 'map(.RootFS.Layers) | .[] | .[] ' >> "$tmpdir/known_hashs"
}

trim_archives() {
	local archive checksum

	for archive; do
		podman save --format=oci-archive "$archive" | tar -C "$tmpdir" -x || error "Could not extract $archive"
		mv "$tmpdir/index.json" "$tmpdir/index.json-$archive"
	done
	jq -s '.[0] + { manifests: [.[] | .manifests | .[]] }' "$tmpdir/index.json-"* > "$tmpdir/index.json"

	shopt -s nullglob
	for blob in "$tmpdir/blobs/sha256/"*; do
		checksum=$(gunzip < "$blob" 2>/dev/null | sha256sum | cut -d' ' -f1)
		if grep -qx "sha256:$checksum" "$tmpdir/known_hashs"; then
			rm -f "$blob"
		fi
	done

	tar -C "$tmpdir" --owner root --group root -cf "$OUTPUT" blobs index.json oci-layout \
		|| error "Could not create new archive"
}

main() {
	local OUTPUT=image.tar
	local tmpdir

	command -v jq >/dev/null || error "You must install jq to use $0"

	tmpdir=$(mktemp -d -t make_partial_image.XXXXXX) || error "Could not create temp dir"
	trap "rm -rf \"$tmpdir\"" EXIT


	while [ $# -gt 0 ]; do
		case "$1" in
		"-b")
			[ $# -ge 2 ] || error "Missing argument to $1"
			inspect_image "$2"
			shift 2
			;;
		"-o")
			[ $# -ge 2 ] || error "Missing argument to $1"
			OUTPUT="$2"
			shift 2
			;;
		"-h"|"--help")
			usage
			exit 0
			;;
		"--")
			shift
			break
			;;
		"-"*)
			error "Invalid argument $1"
			;;
		*)
			break
			;;
		esac
	done
	
	[ $# -lt 1 ] && usage && exit 1

	trim_archives "$@"
}

main "$@"

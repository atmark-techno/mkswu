# public and private key locations for signing purpose.
# There can be multiple PUBKEY, comma separated, in which case
# the first one is used for signing but other keys will be added to
# device allow list for future updates.
# After installing an update with extra keys once, the old key can be
# removed from PUBKEY, and PRIVKEY adjusted to use the correct one to
# complete the key rotation
PRIVKEY="$CONFIG_DIR/swupdate.key"
PUBKEY="$CONFIG_DIR/swupdate.pem"

# private key password, if set. defaults to prompting for password.
# Note that this is not safe if you store the key and its password
# in the same place!
PRIVKEY_PASS=""

# AES encryption key if set
## example ENCRYPT_KEYFILE="$CONF_DIR/swupdate.aes-key"
ENCRYPT_KEYFILE=""

# swupdate hwrevision compatibility tag. Note that if you change it on the device,
# you might no longer be able to install atmark updates.
# See documentation for help if you require changing it:
# https://sbabic.github.io/swupdate/sw-description.html#hardware-compatibility
HW_COMPAT="#RE:^at1(-.*)?$"

# Description is an informative string describing your update in verbose mode
# You probably want to override this in your image descriptions
DESCRIPTION="Atmark firmware image"

# atmark public keys to be allowed on device.
# This variable is only used for vendor updates and while it can be set
# manually this is not recommended
ATMARK_PUBKEYS=""


# Settings below are for hawkbit_push_update
# hawkbit user account name to use for uploading updates.
# If you are using the setup_container script mkswu has proper permissions
HAWKBIT_USER=mkswu
# clear text password of $HAWKBIT_USER
HAWKBIT_PASSWORD=""

# URL of hawkbit server e.g. https://hawkbit.domain.tld
HAWKBIT_URL=""

# curl options required to connect to hawkbit (e.g. ca certificate)
HAWKBIT_CURLOPT=""

# comma-separated list of devices 'id', e.g.
# armadillo-00c7-0001-0006 or armadillo-00c7-0001-0006,armadillo-00c7-0001-0007
# there will be no test group if left empty
ROLLOUT_TEST_DEVICES=

# number of groups to split the rollout into
ROLLOUT_N_GROUPS=2

# percent of successes required to trigger the next rollout start
ROLLOUT_SUCCESS_THRESHOLD=70
# percent of failures after which the next step will not start automatically
ROLLOUT_ERROR_THRESHOLD=30
